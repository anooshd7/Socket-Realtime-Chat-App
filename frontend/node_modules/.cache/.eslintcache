[{"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\index.js":"1","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\App.js":"2","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\login.js":"3","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\landing.js":"4","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Signup.js":"5","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\chatroom.js":"6","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Avatar.js":"7","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Welcome.jsx":"8","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Contacts.jsx":"9","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\ChatContainer.jsx":"10","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\APIRoutes.js":"11","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\ChatInput.jsx":"12","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Logout.jsx":"13"},{"size":267,"mtime":1668684144894,"results":"14","hashOfConfig":"15"},{"size":662,"mtime":1668777307414,"results":"16","hashOfConfig":"15"},{"size":4142,"mtime":1668751222605,"results":"17","hashOfConfig":"15"},{"size":2251,"mtime":1668684144895,"results":"18","hashOfConfig":"15"},{"size":5540,"mtime":1668777683678,"results":"19","hashOfConfig":"15"},{"size":2565,"mtime":1668757793093,"results":"20","hashOfConfig":"15"},{"size":5739,"mtime":1668840613809,"results":"21","hashOfConfig":"15"},{"size":1609,"mtime":1669003992738,"results":"22","hashOfConfig":"15"},{"size":3906,"mtime":1668756196205,"results":"23","hashOfConfig":"15"},{"size":4584,"mtime":1679825890486,"results":"24","hashOfConfig":"15"},{"size":464,"mtime":1668750237030,"results":"25","hashOfConfig":"15"},{"size":3609,"mtime":1669609153765,"results":"26","hashOfConfig":"15"},{"size":954,"mtime":1668843465277,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"8klojy",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\App.js",["73"],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\login.js",["74"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport dude from \"./try.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Login() {\r\n  const loginRoute = \"http://localhost:8000/api/auth/login\";\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({ username: \"\", password: \"\" });\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n    // Style for the toast\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"current-user\")) {\r\n      navigate(\"/avatar\");\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { username, password } = values;\r\n    if (username === \"\") {\r\n      toast.error(\"Email and Password is required.\", toastOptions);\r\n      return false;\r\n    } else if (password === \"\") {\r\n      toast.error(\"Email and Password is required.\", toastOptions);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (validateForm()) {\r\n      const { username, password } = values;\r\n      const { data } = await axios.post(loginRoute, {\r\n        username,\r\n        password,\r\n      });\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if (data.status === true) {\r\n        localStorage.setItem(\r\n          \"current-user\",\r\n          JSON.stringify(data.user)\r\n        );\r\n\r\n        navigate(\"/avatar\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-center h-screen bg-[#add8e6]\">\r\n        <img src={dude} alt=\"dude\" className=\"w-1/3 ml-12\" />\r\n        <FormContainer>\r\n          <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\r\n            <div className=\"brand bg-white\">\r\n              <h1 className=\"bg-white mb-4\">Login</h1>\r\n            </div>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              onChange={(e) => handleChange(e)}\r\n              min=\"3\"\r\n              className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              onChange={(e) => handleChange(e)}\r\n              className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full px-5 py-2.5 mb-4 text-white bg-red-700 rounded-lg focus:outline-none hover:bg-red-800 focus:ring-2 focus:ring-red-300 focus:ring-opacity-50\"\r\n            >\r\n              Login\r\n            </button>\r\n            <span>\r\n              Don't have an account ? <Link to=\"/signup\">Create One.</Link>\r\n            </span>\r\n          </form>\r\n        </FormContainer>\r\n        <ToastContainer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #add8e6;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: black;\r\n    }\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 2rem;\r\n    padding: 5rem;\r\n  }\r\n\r\n  span {\r\n    color: black;\r\n    a {\r\n      background-color: white;\r\n      color: #4e0eff;\r\n    }\r\n    background-color: white;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\landing.js",["75","76","77","78","79","80","81","82"],[],"import logo from \"./sr2.png\";\r\nimport \"./App.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./login\";\r\nimport chatroom from \"./chatroom\";\r\n\r\nfunction Landing() {\r\n  let socket = io(\"http://localhost:8000\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Connected to server\");\r\n  });\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      console.log(message.text);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App h-full\">\r\n      <header className=\"App-header\">\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"heading mt-36\">Chat App</h1>\r\n          <h2>\r\n            The <span className=\"highlight\">Realtime</span> Chat App\r\n          </h2>\r\n          <div className=\"Buttons\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                window.location.href = \"/signup\";\r\n              }}\r\n              class=\" mt-12 px-24 focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\"\r\n            >\r\n              Get Started\r\n            </button>\r\n\r\n            {/* <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                // Emit socket event to join the room\r\n                socket.emit(\"join\", {\r\n                  name: \"John\",\r\n                  room: \"Room \" + Math.floor(Math.random() * 10),\r\n                });\r\n              \r\n              window.location.href = \"/login\";\r\n              }}\r\n              class=\" mt-12 px-24 focus:outline-none text-white bg-orange-400 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\"\r\n            >\r\n              Login\r\n            </button>  */}\r\n          </div>\r\n\r\n          <img src={logo} className=\"landing-img\" alt=\"logo\" />\r\n        </div>\r\n      </header>\r\n    </div>\r\n    // <Signup />\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Signup.js",["83"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n// import Logo from \"../assets/logo.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport hello from \"./try.png\";\r\n\r\nexport default function Register() {\r\n  let registerRoute = \"http://localhost:8000/api/auth/register\";\r\n  const navigate = useNavigate();\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"current-user\")) {\r\n      navigate(\"/Avatar\");\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { password, confirmPassword, username, email } = values;\r\n    if (password !== confirmPassword) {\r\n      toast.error(\r\n        \"Password and confirm password should be same.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (username.length < 3) {\r\n      toast.error(\r\n        \"Username should be greater than 3 characters.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (password.length < 8) {\r\n      toast.error(\r\n        \"Password should be equal or greater than 8 characters.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (email === \"\") {\r\n      toast.error(\"Email is required.\", toastOptions);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      const { email, username, password } = values;\r\n      const { data } = await axios.post(registerRoute, {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if (data.status === true) {\r\n        localStorage.setItem(\r\n          \"current-user\",\r\n          JSON.stringify(data.user)\r\n        );\r\n        navigate(\"/Avatar\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-full\">\r\n        <div className=\"flex items-center justify-start h-screen\">\r\n          <img src={hello} alt=\"hello\" className=\"w-1/3 ml-24\" />\r\n          <FormContainer>\r\n            <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\r\n              <div className=\"brand\">\r\n                {/* <img src={Logo} alt=\"logo\" /> */}\r\n                <h1>Sign Up</h1>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                onChange={(e) => handleChange(e)}\r\n                min=\"3\"\r\n                className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={(e) => handleChange(e)}\r\n                min=\"3\"\r\n                className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={(e) => handleChange(e)}\r\n                className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                onChange={(e) => handleChange(e)}\r\n                className=\"w-full px-5 py-2.5 mb-7 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:border-transparent\"\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full px-5 py-2.5 mb-4 text-white bg-red-700 rounded-lg focus:outline-none hover:bg-red-800 focus:ring-2 focus:ring-red-300 focus:ring-opacity-50\"\r\n              >\r\n                Create User\r\n              </button>\r\n              <span>\r\n                Already have an account ? <Link to=\"/login\">Login.</Link>\r\n              </span>\r\n            </form>\r\n          </FormContainer>\r\n          <ToastContainer />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #add8e6;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: black;\r\n      margin-bottom: 2vh;\r\n    }\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n  }\r\n\r\n  span {\r\n    color: black;\r\n    a {\r\n      color: #4e0eff;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\chatroom.js",["84","85"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nimport styled from \"styled-components\";\r\nimport { allUsersRoute, host } from \"./APIRoutes\";\r\nimport ChatContainer from \"./ChatContainer\";\r\nimport Contacts from \"./Contacts\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport default function Chat() {\r\n  const navigate = useNavigate();\r\n  const socket = useRef();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  useEffect( () => {\r\n    console.log(\"hello\");\r\n    console.log(\"current-user\");\r\n    async function fetchContacts() {\r\n    if (!localStorage.getItem(\"current-user\")) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setCurrentUser(\r\n        await JSON.parse(\r\n          localStorage.getItem(\"current-user\")\r\n        )\r\n      );\r\n    }\r\n  }\r\n  fetchContacts();\r\n\r\n  }, []);\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect( () => {\r\n    async function fetchContacts() {\r\n    if (currentUser) {\r\n      if (currentUser.isAvatarImageSet) {\r\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n        console.log(data.data);\r\n        setContacts(data.data);\r\n      } else {\r\n        navigate(\"/setAvatar\");\r\n      }\r\n    }\r\n  }\r\n  fetchContacts();\r\n  }, [currentUser]);\r\n  const handleChatChange = (chat) => {\r\n    console.log(\"chat changed\");\r\n    console.log(chat);\r\n    setCurrentChat(chat);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"container\">\r\n          <Contacts contacts={contacts} changeChat={handleChatChange} />\r\n          {currentChat === undefined ? (\r\n            <Welcome />\r\n          ) : (\r\n            <ChatContainer currentChat={currentChat} socket={socket} />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #add8e6;\r\n  .container {\r\n    height: 85vh;\r\n    width: 85vw;\r\n    background-color: #f2f5f8;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Avatar.js",["86"],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Welcome.jsx",[],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Contacts.jsx",["87"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"./0.png\";\r\n\r\nexport default function Contacts({ contacts, changeChat }) {\r\n  const [currentUserName, setCurrentUserName] = useState(undefined);\r\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n  const [currentSelected, setCurrentSelected] = useState(undefined);\r\n  useEffect( () => {\r\n    async function fetchData() {\r\n    const data = await JSON.parse(\r\n      localStorage.getItem(\"current-user\")\r\n    );\r\n    setCurrentUserName(data.username);\r\n    setCurrentUserImage(data.avatarImage);\r\n    }\r\n    fetchData();\r\n  }, []); \r\n  \r\n  const changeCurrentChat = (index, contact) => {\r\n    setCurrentSelected(index);\r\n    changeChat(contact);\r\n  };\r\n  return (\r\n    <>\r\n      {currentUserImage && currentUserImage && (\r\n        <Container>\r\n          <div className=\"brand\">\r\n            {/* <img src={Logo} alt=\"logo\" /> */}\r\n            \r\n          </div>\r\n          <div className=\"contacts\">\r\n            {contacts.map((contact, index) => {\r\n              return (\r\n                <div\r\n                  key={contact._id}\r\n                  className={`contact ${\r\n                    index === currentSelected ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => changeCurrentChat(index, contact)}\r\n                >\r\n                  <div className=\"avatar\">\r\n                    <img\r\n                      src={contact.avatarImage}\r\n                      alt=\"\"\r\n                      className=\"rounded-full\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"username\">\r\n                    <h3>{contact.username}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"current-user\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={currentUserImage}\r\n                alt=\"avatar\"\r\n                className=\"rounded-full\"\r\n              />\r\n            </div>\r\n            <div className=\"username\">\r\n              <h2>{currentUserName}</h2>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 10% 75% 15%;\r\n  overflow: hidden;\r\n  background-color: #454753;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 2rem;\r\n    }\r\n    h3 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  .contacts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n    gap: 0.8rem;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .contact {\r\n      background-color: #ffffff34;\r\n      min-height: 5rem;\r\n      cursor: pointer;\r\n      width: 90%;\r\n      border-radius: 0.2rem;\r\n      padding: 0.4rem;\r\n      display: flex;\r\n      gap: 1rem;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n    .selected {\r\n      background-color: #9a86f3;\r\n    }\r\n  }\r\n\r\n  .current-user {\r\n    background-color: #0d0d30;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    .avatar {\r\n      img {\r\n        height: 4rem;\r\n        max-inline-size: 100%;\r\n      }\r\n    }\r\n    .username {\r\n      h2 {\r\n        color: white;\r\n      }\r\n    }\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      gap: 0.5rem;\r\n      .username {\r\n        h2 {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\ChatContainer.jsx",["88"],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\APIRoutes.js",[],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\ChatInput.jsx",["89","90","91","92"],[],"C:\\Users\\Anoosh\\Desktop\\realtime-chat-app\\realtime-chat-app\\frontend\\src\\Logout.jsx",[],[],{"ruleId":"93","severity":1,"message":"94","line":2,"column":50,"nodeType":"95","messageId":"96","endLine":2,"endColumn":54},{"ruleId":"97","severity":1,"message":"98","line":25,"column":6,"nodeType":"99","endLine":25,"endColumn":8,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"93","severity":1,"message":"104","line":16,"column":10,"nodeType":"95","messageId":"96","endLine":16,"endColumn":18},{"ruleId":"93","severity":1,"message":"105","line":16,"column":20,"nodeType":"95","messageId":"96","endLine":16,"endColumn":31},{"ruleId":"93","severity":1,"message":"106","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":17},{"ruleId":"93","severity":1,"message":"107","line":17,"column":19,"nodeType":"95","messageId":"96","endLine":17,"endColumn":29},{"ruleId":"97","severity":1,"message":"108","line":23,"column":6,"nodeType":"99","endLine":23,"endColumn":8,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"98","line":31,"column":6,"nodeType":"99","endLine":31,"endColumn":8,"suggestions":"110"},{"ruleId":"97","severity":1,"message":"98","line":33,"column":6,"nodeType":"99","endLine":33,"endColumn":8,"suggestions":"111"},{"ruleId":"97","severity":1,"message":"98","line":54,"column":6,"nodeType":"99","endLine":54,"endColumn":19,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"113","line":96,"column":14,"nodeType":"114","endLine":99,"endColumn":33},{"ruleId":"93","severity":1,"message":"115","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"108","line":64,"column":6,"nodeType":"99","endLine":64,"endColumn":8,"suggestions":"116"},{"ruleId":"93","severity":1,"message":"117","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"118","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"119","line":10,"column":9,"nodeType":"95","messageId":"96","endLine":10,"endColumn":34},{"ruleId":"93","severity":1,"message":"120","line":14,"column":9,"nodeType":"95","messageId":"96","endLine":14,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'Signup' is defined but never used.","'Login' is defined but never used.","'chatroom' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["122"],["123"],["124"],["125"],"Assignments to the 'images' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Logo' is defined but never used.",["126"],"'BsEmojiSmileFill' is defined but never used.","'Picker' is defined but never used.","'handleEmojiPickerhideShow' is assigned a value but never used.","'handleEmojiClick' is assigned a value but never used.",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},{"desc":"127","fix":"132"},{"desc":"133","fix":"134"},{"desc":"129","fix":"135"},"Update the dependencies array to be: [navigate]",{"range":"136","text":"137"},"Update the dependencies array to be: [socket]",{"range":"138","text":"139"},{"range":"140","text":"137"},{"range":"141","text":"137"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"142","text":"143"},{"range":"144","text":"139"},[811,813],"[navigate]",[593,595],"[socket]",[892,894],[1029,1031],[1568,1581],"[currentUser, navigate]",[1765,1767]]