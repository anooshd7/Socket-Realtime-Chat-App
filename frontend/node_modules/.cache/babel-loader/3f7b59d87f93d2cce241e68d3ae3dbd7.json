{"ast":null,"code":"/**\n * @fileoverview Http request in node.js\n * @author douzi <liaowei08@gmail.com> \n */\nvar http = require('http');\nvar util = require('utils-extend');\nvar url = require('url');\nvar path = require('path');\nvar querystring = require('querystring');\nvar file = require('file-system');\n\n/**\n * @description\n * http request\n * @param {object|string} [options]\n * @param {function} [callback]\n * @example\n * request('url', function(err, res, body) { });\n * request({url: '', headers: {}, method: 'POST'}, function(err, res, body) { });\n */\nfunction request(options, callback) {\n  var opts = {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    encoding: 'utf8',\n    // If the callback body is buffer, it can hanlder document pipe simply\n    isBuffer: false,\n    json: false\n  };\n  if (util.isString(options)) {\n    opts.url = options;\n  } else {\n    util.extend(opts, options);\n  }\n\n  // Append request data\n  if (opts.data) {\n    if (opts.method === 'GET') {\n      opts.url += '?' + querystring.stringify(opts.data);\n    } else {\n      opts.data = JSON.stringify(opts.data);\n      opts.headers['Content-Length'] = new Buffer(opts.data).length;\n    }\n  }\n\n  // Extend request url object\n  util.extend(opts, util.pick(url.parse(opts.url), 'hostname', 'port', 'path', 'auth'));\n  delete opts.url;\n  var req = http.request(opts, function (res) {\n    var body = [];\n    var size = 0;\n    res.on('data', function (chunk) {\n      body.push(chunk);\n      size += chunk.length;\n    });\n    res.on('end', function () {\n      var result = '';\n\n      // Buffer\n      if (opts.isBuffer) {\n        result = Buffer.concat(body, size);\n      } else {\n        var buffer = new Buffer(size);\n        for (var i = 0, pos = 0, l = body.length; i < l; i++) {\n          var chunk = body[i];\n          chunk.copy(buffer, pos);\n          pos += chunk.length;\n        }\n        result = buffer.toString(opts.encoding);\n        if (opts.json) {\n          result = JSON.parse(result);\n        }\n      }\n      callback(null, res, result);\n    });\n  });\n  req.on('error', callback);\n  if (opts.method !== 'GET' && opts.data) {\n    req.write(opts.data);\n  }\n  req.end();\n}\n\n/**\n * @description\n * @example\n * request.post('url', function() {});\n * request.post({ url: 'url', data: { q1: 'v1' }}, function() {});\n */\nrequest.post = function (options, callback) {\n  if (util.isString(options)) {\n    options = {\n      url: options\n    };\n  }\n  options.method = 'POST';\n  request(options, callback);\n};\n\n/**\n * @description\n * Download remote resurce to local file\n * @example\n * request.download({ url: 'path.png' }, function(err, res, body, filepath) {})\n * request.download({ \n    url: 'path.png',\n    rootPath: 'dest/path' \n   }, function(err, res, body, filepath) {\n    \n   });\n */\nrequest.download = function (options, callback) {\n  var opts = util.extend({\n    rootPath: '',\n    ignore: false\n  }, options);\n  request({\n    url: opts.url,\n    isBuffer: true\n  }, function (err, res, body) {\n    if (err) return callback(err);\n    if (res.statusCode !== 200) return callback(err, res, body);\n    var destPath;\n    var pathname = url.parse(options.url).pathname.replace(/^\\//, '');\n    if (opts.destPath) {\n      if (util.isFunction(opts.destPath)) {\n        destPath = opts.destPath(path.basename(pathname));\n      } else {\n        destPath = opts.destPath;\n      }\n    } else {\n      destPath = path.join(options.rootPath, pathname);\n    }\n    if (opts.ignore) {\n      destPath = destPath.toLowerCase();\n    }\n    file.writeFile(destPath, body, function (err) {\n      if (err) return callback(err);\n      callback(null, res, body, destPath);\n    });\n  });\n};\nmodule.exports = request;","map":{"version":3,"names":["http","require","util","url","path","querystring","file","request","options","callback","opts","headers","method","encoding","isBuffer","json","isString","extend","data","stringify","JSON","Buffer","length","pick","parse","req","res","body","size","on","chunk","push","result","concat","buffer","i","pos","l","copy","toString","write","end","post","download","rootPath","ignore","err","statusCode","destPath","pathname","replace","isFunction","basename","join","toLowerCase","writeFile","module","exports"],"sources":["C:/Users/Anoosh/Desktop/realtime-chat-app/realtime-chat-app/frontend/node_modules/ajax-request/index.js"],"sourcesContent":["/**\n * @fileoverview Http request in node.js\n * @author douzi <liaowei08@gmail.com> \n */\nvar http = require('http');\nvar util = require('utils-extend');\nvar url = require('url');\nvar path = require('path');\nvar querystring = require('querystring');\nvar file = require('file-system');\n\n/**\n * @description\n * http request\n * @param {object|string} [options]\n * @param {function} [callback]\n * @example\n * request('url', function(err, res, body) { });\n * request({url: '', headers: {}, method: 'POST'}, function(err, res, body) { });\n */\nfunction request(options, callback) {\n  var opts = {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    encoding: 'utf8',\n    // If the callback body is buffer, it can hanlder document pipe simply\n    isBuffer: false,\n    json: false\n  };\n\n  if (util.isString(options)) {\n    opts.url = options;\n  } else {\n    util.extend(opts, options);\n  }\n\n  // Append request data\n  if (opts.data) {\n    if (opts.method === 'GET') {\n      opts.url += '?' + querystring.stringify(opts.data);\n    } else {\n      opts.data = JSON.stringify(opts.data);\n      opts.headers['Content-Length'] = new Buffer(opts.data).length;\n    }\n  }\n\n  // Extend request url object\n  util.extend(opts, util.pick(url.parse(opts.url), 'hostname', 'port', 'path', 'auth'));\n  delete opts.url;\n\n  var req = http.request(opts, function(res) {\n    var body = [];\n    var size = 0;\n\n    res.on('data', function(chunk) {\n      body.push(chunk);\n      size += chunk.length;\n    });\n\n    res.on('end', function() {\n      var result = '';\n\n      // Buffer\n      if (opts.isBuffer) {\n        result =  Buffer.concat(body, size);\n      } else {\n        var buffer = new Buffer(size);\n        for (var i = 0, pos = 0, l = body.length; i < l; i++) {\n          var chunk = body[i];\n          chunk.copy(buffer, pos);\n          pos += chunk.length;\n        }\n        result = buffer.toString(opts.encoding);\n\n        if (opts.json) {\n          result = JSON.parse(result);\n        }\n      }\n\n      callback(null, res, result);\n    });\n  });\n\n  req.on('error', callback);\n\n  if (opts.method !== 'GET' && opts.data) {\n    req.write(opts.data);\n  }\n\n  req.end();\n}\n\n/**\n * @description\n * @example\n * request.post('url', function() {});\n * request.post({ url: 'url', data: { q1: 'v1' }}, function() {});\n */\nrequest.post = function(options, callback) {\n  if (util.isString(options)) {\n    options = {\n      url: options\n    };\n  }\n\n  options.method = 'POST';\n  request(options, callback);\n};\n\n/**\n * @description\n * Download remote resurce to local file\n * @example\n * request.download({ url: 'path.png' }, function(err, res, body, filepath) {})\n * request.download({ \n    url: 'path.png',\n    rootPath: 'dest/path' \n   }, function(err, res, body, filepath) {\n    \n   });\n */\nrequest.download = function(options, callback) {\n  var opts = util.extend({\n    rootPath: '',\n    ignore: false\n  }, options);\n\n  request({\n    url: opts.url,\n    isBuffer: true\n  }, function(err, res, body) {\n    if (err) return callback(err);\n    if (res.statusCode !== 200) return callback(err, res, body);\n    var destPath;\n    var pathname = url.parse(options.url).pathname.replace(/^\\//, '');\n\n    if (opts.destPath) {\n      if (util.isFunction(opts.destPath)) {\n        destPath = opts.destPath(path.basename(pathname));\n      } else {\n        destPath = opts.destPath;\n      }\n    } else {\n      destPath = path.join(\n        options.rootPath,\n        pathname\n      );\n    }\n\n    if (opts.ignore) {\n      destPath = destPath.toLowerCase();\n    }\n\n    file.writeFile(destPath, body, function(err) {\n      if (err) return callback(err);\n\n      callback(null, res, body, destPath);\n    });\n  });\n};\n\nmodule.exports = request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}